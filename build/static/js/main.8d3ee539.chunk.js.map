{"version":3,"sources":["Components/ContactsList/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/App.module.css","Components/ContactsList/ContactsList.module.css","Components/ContactForm/ContactForm.module.css","redux/middleware.js","redux/contactsItems/contacts-actions.js","redux/contactsItems/contacts-reducer.js","redux/filter/filter-actions.js","redux/store.js","redux/filter/filter-reducer.js","redux/contactsItems/contacts-operations.js","redux/contactsItems/contacts-selectors.js","Components/ContactForm/ContactForm.jsx","Components/ContactsList/ContactItem/ContactItem.jsx","Components/ContactsList/ContactsList.jsx","Components/Filter/Filter.jsx","Components/App.js","index.js"],"names":["module","exports","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","fetchContactRequest","createAction","fetchContactSucces","fetchContactError","addContactRequest","addContactSucces","addContactError","deleteContactRequest","deleteContactSucces","deleteContactError","contactsReducer","createReducer","_","payload","state","filter","contact","id","loadingReducer","errorReducer","error","changeFilter","reducer","contacts","loading","store","configureStore","devTools","process","axios","defaults","baseURL","getContacts","getFilter","getFilteredContacts","createSelector","name","toLowerCase","includes","ContactForm","number","heandleInput","e","setState","currentTarget","value","addNewContact","preventDefault","props","onSubmit","uuidv4","passNewContact","newName","pass","forEach","alert","className","styles","form","this","label","input","type","onChange","required","example","pattern","button","Component","connect","dispatch","a","post","then","data","catch","addContact","ContactItem","deleteOnClick","item","onClick","contactId","target","delete","list","map","container","App","fetchContacts","title","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d3ee539.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactItem_contact__2C9ga\",\"item\":\"ContactItem_item__2oliT\",\"button\":\"ContactItem_button__4bve-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1-7cL\",\"label\":\"Filter_label__39jWC\",\"input\":\"Filter_input__PvKcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1mO2M\",\"title\":\"App_title__3UYWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__23qKw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2z2KH\",\"label\":\"ContactForm_label__3DDc_\",\"input\":\"ContactForm_input__1lsZJ\",\"example\":\"ContactForm_example__1azpT\",\"button\":\"ContactForm_button__3gzYI\"};","import { getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport default middleware;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactSucces = createAction('contacts/fetchSucces');\r\nconst fetchContactError = createAction('contacts/fetchError');\r\n\r\nconst addContactRequest = createAction('contacts/createRequest');\r\nconst addContactSucces = createAction('contacts/createSucces');\r\nconst addContactError = createAction('contacts/createError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteRequest');\r\nconst deleteContactSucces = createAction('contacts/deleteSucces');\r\nconst deleteContactError = createAction('contacts/deleteError');\r\n\r\nexport {\r\n  fetchContactRequest,\r\n  fetchContactSucces,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSucces,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n};\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSucces,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSucces,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactSucces]: (_, { payload }) => [...payload],\r\n  [addContactSucces]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSucces]: (state, { payload }) => [\r\n    ...state.filter(contact => contact.id !== payload),\r\n  ],\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSucces]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSucces]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSucces]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [fetchContactError]: error => error,\r\n  [addContactError]: error => error,\r\n  [deleteContactError]: error => error,\r\n});\r\n\r\nexport { contactsReducer, loadingReducer, errorReducer };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('filter/changed');\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\n// import { persistStore, persistReducer } from 'redux-persist';\r\n\r\nimport middleware from './middleware';\r\n// import contactsPersistConfig from './contactsItems/contacts-persist-config';\r\nimport {\r\n  contactsReducer,\r\n  errorReducer,\r\n  loadingReducer,\r\n} from './contactsItems/contacts-reducer';\r\nimport { filterReducer } from './filter/filter-reducer';\r\n\r\nconst reducer = {\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  error: errorReducer,\r\n  loading: loadingReducer,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default { store };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './filter-actions';\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSucces,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSucces,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSucces(data)))\r\n    .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nconst addContact = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSucces(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(({ data }) => dispatch(deleteContactSucces(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts;\r\n\r\nconst getFilter = state => state.filter;\r\n\r\nconst getContactsLengths = state => getContacts(state).length;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(\r\n      ({ name }) => name && name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n\r\nexport { getContacts, getFilter, getFilteredContacts, getContactsLengths };\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addContact } from '../../redux/contactsItems/contacts-operations';\r\n\r\nimport { getContacts } from '../../redux/contactsItems/contacts-selectors';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  heandleInput = e => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  };\r\n\r\n  addNewContact = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit({ id: uuidv4(), ...this.state });\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  passNewContact = (newName, number) => {\r\n    let pass = true;\r\n\r\n    this.state.contacts.forEach(({ name }) => {\r\n      if (name.toLowerCase() === newName.toLowerCase()) {\r\n        alert(`${name} is already in your contacts list`);\r\n        pass = false;\r\n      }\r\n    });\r\n\r\n    if (newName === '' || number === '') {\r\n      alert(`Please whrite all info`);\r\n      pass = false;\r\n    }\r\n\r\n    return pass;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.addNewContact}>\r\n        <label className={styles.label}>\r\n          Name:\r\n          <input\r\n            className={styles.input}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.heandleInput}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number<span className={styles.example}>(000-00-00)</span>:\r\n          <input\r\n            className={styles.input}\r\n            name=\"number\"\r\n            type=\"tel\"\r\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n            value={this.state.number}\r\n            onChange={this.heandleInput}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number, id, deleteOnClick }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <div className={styles.contact}>\r\n        <span>{name}</span>\r\n        <span>{number}</span>\r\n      </div>\r\n\r\n      <button className={styles.button} id={id} onClick={deleteOnClick}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  deleteOnClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { deleteContact } from '../../redux/contactsItems/contacts-operations';\r\n\r\nimport { getFilteredContacts } from '../../redux/contactsItems/contacts-selectors';\r\n\r\nimport ContactsItem from './ContactItem';\r\n\r\nimport styles from './ContactsList.module.css';\r\n\r\nconst ContactsList = ({ contacts, deleteOnClick }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactsItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          id={id}\r\n          deleteOnClick={deleteOnClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteOnClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteOnClick: e => dispatch(deleteContact(e.target.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getFilter } from '../../redux/contactsItems/contacts-selectors';\r\n\r\nimport { changeFilter } from '../../redux/filter/filter-actions';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <label className={styles.label}>\r\n        Filter:\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContactForm from './ContactForm';\r\nimport ContactsList from './ContactsList';\r\nimport Filter from './Filter';\r\n\r\nimport { fetchContacts } from '../redux/contactsItems/contacts-operations';\r\n// import { getContactsLengths } from '../redux/contactsItems/contacts-selectors';\r\n\r\nimport styles from './App.module.css';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2 className={styles.title}>Contacts</h2>\r\n        <Filter />\r\n        <ContactsList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   contactsLength: getContactsLengths(state),\r\n// });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from 'redux/store';\r\n\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      {/* Временный коммит, понадобиться потом для логина */}\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}